@page
@model ALS.Pages.AssignVariant

@{
    Layout = "_Layout";
    ViewData["Title"] = "Журнал";
}
<h3>Журнал </h3>
<div style="margin-bottom: 1%">
    <span>Дисциплина: </span><select onchange="DisciplineSel()" id="disciplineSelect"></select>
    <span>Группа: </span><select onchange="CreateTable()" id="groupSelect"></select>
    <span>Лабораторная работа: </span><select onchange="CreateTable()" id="laboratoryWorkSelect"></select>
</div>
<div class="container">
<table style="width: 100%" class="table table-hover" border="1">
    <thead>
    <tr>
    <td>ФИО</td>
    <td>Назначенный вариант</td>
    </thead>
    <tbody id="tbodyContent">
</table>
</div>
<script>
    $.ajax(
          {
              type: 'GET',
              url: '/api/disciplines/getall',
              async: false,
              beforeSend: (xhr) => 
              {
              },
              success: (disciplines) =>
              {
                  let sel = $('#disciplineSelect');
                  
                        if(disciplines.length === 0)
                        {
                            alert('Вы не ведёте ни одной дисциплины');
                            history.go(-1);
                        }
                      for (let discipline of disciplines)
                      {
                          let opt = document.createElement('option');
                          opt.text = discipline.name;
                          opt.dataset.id = discipline.cipher;
                          sel.append(opt);
                      }
              },
              error: (awFail) =>
              {
                  document.body.innerHTML = '';
                  alert('Нет доступа');
                  history.go(-1);
              }
          }
    );
    getComboBoxData();
    CreateTable();
    
    function DisciplineSel() {
      getComboBoxData();
    }
    
    
    function CreateTable() {
        let data = getData();
        let assignedVariants;
        $.ajax(
                    {
                        type: 'GET',
                        url: '/api/assignedvariants/getall',
                        beforeSend: (xhr) => 
                        {
                            xhr.setRequestHeader("groupId", data.idGroup);
                            xhr.setRequestHeader("laboratoryWorkId", data.idLw);
                        },
                        success: (aw) =>
                        {
                            assignedVariants = aw;
                        },
                        error: (awFail) =>
                        {
                            document.body.innerHTML = '';
                            alert('Нет доступа');
                            history.go(-1);
                        }
                    }
            );
                    
        $.ajax(
              {
                  type: 'GET',
                  url: '/api/users/getusersbygroup',
                  beforeSend: (xhr) => 
                  {
                      xhr.setRequestHeader("groupId", data.idGroup);
                  },
                  success: (users) =>
                  {
                      $.ajax(
                            {
                                type: 'GET',
                                url: '/api/variants/getallbylaboratoryid',
                                beforeSend: (xhr) => 
                                {
                                    xhr.setRequestHeader("laboratoryWorkId", data.idLw);
                                },
                                success: (variants) =>
                                {
                                    let tbdy = document.getElementById('tbodyContent');
                                    tbdy.innerHTML = ""; //Удалим все дочерние узлы
                                    if(variants.length === 0)
                                    {
                                        alert("У вас нет вариантов к этой лабораторной работе");
                                        return;
                                    }
                                    for (let user of users)
                                    {
                                        let tr = document.createElement('tr');
                                        tbdy.appendChild(tr);
                                        let tdUser = document.createElement('td');
                                        tr.appendChild(tdUser);
                                        tdUser.appendChild(document.createTextNode(user.name + " " + user.surname + " " + user.patronymic));
                                        tdUser.dataset.id = user.id;
                                        let tdVar = document.createElement('td');
                                        tr.appendChild(tdVar);
                                        let select;
                                        let isAssigned = false;
                                        for (let variant of variants)
                                        {
                                           let find = assignedVariants.find(x => x.variantId === variant.variantId && x.userId === user.id);
                                           select = variant.variantNumber;
                                           tr.dataset.id = variant.variantId;
                                           if(find !== undefined)
                                           {
                                               isAssigned = true;
                                           }
                                        }
                                        if(variants.length !== 0 && isAssigned === false)
                                        {
                                            select = "Не назначено";
                                        }
                                        tdVar.innerText = select;
                                    }
                                },
                                error: (groupsFail) =>
                                {
                                    document.body.innerHTML = '';
                                    alert('Нет доступа');
                                    history.go(-1);
                                }
                            }
                        );
                  },
                  error: (groupsFail) =>
                  {
                      document.body.innerHTML = '';
                      alert('Нет доступа');
                      history.go(-1);
                  }
              }
          );
          
          
    }
    
    function getData() 
    {
      return { idGroup: $('#groupSelect option:selected')[0].dataset.id, idLw: $('#laboratoryWorkSelect option:selected')[0].dataset.id }
    }
    
    function getAssignedVariantData(obj) {
        return {UserId: obj.parentNode.previousSibling.dataset.id, VariantId: obj.options[obj.options.selectedIndex].dataset.id};
    }
    
    function getComboBoxData()
    {
        let disciplineId = $('#disciplineSelect option:selected')[0].dataset.id;
        $.ajax(
            {
                type: 'GET',
                url: '/api/groups/getallbydisciplineid',
                async:false,
                beforeSend: (xhr) => 
                {
                    xhr.setRequestHeader("disciplineCipher", disciplineId);
                },
                success: (groups) =>
                {
                    let sel = $('#groupSelect');
                    for (let group of groups)
                    {
                        let opt = document.createElement('option');
                        opt.text = group.name;
                        opt.dataset.id = group.groupId;
                        sel.append(opt);
                    }
                    
                },
                error: (groupsFail) =>
                {
                    document.body.innerHTML = '';
                    alert('Нет доступа');
                    history.go(-1);
                }
            }
        );
        
        $.ajax(
                    {
                        type: 'GET',
                        url: '/api/laboratoryworks/getallbydiscipline',
                        async:false,
                        beforeSend: (xhr) => 
                        {
                            xhr.setRequestHeader("disciplineCipher", disciplineId);
                        },
                        success: (laboratoryWorks) =>
                        {
                            let sel = $('#laboratoryWorkSelect');
                            for (let lw of laboratoryWorks)
                            {
                                let opt = document.createElement('option');
                                opt.dataset.id = lw.laboratoryWorkId;
                                opt.text = lw.name;
                                sel.append(opt);
                            }
                        },
                        error: (groupsFail) =>
                        {
                            document.body.innerHTML = '';
                            alert('Нет доступа');
                            history.go(-1);
                        }
                    }
                );
        }
        
        
</script>