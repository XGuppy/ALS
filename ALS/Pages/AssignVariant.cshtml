@page
@model ALS.Pages.AssignVariant

@{
    Layout = "_Layout";
    ViewData["Title"] = "Назначить вариант";
}
<h3>Назначение варианта </h3>
<div style="margin-bottom: 1%">
    <span>Дисциплина: </span><select onchange="DisciplineSel()" id="disciplineSelect"></select>
    <span>Группа: </span><select onchange="CreateTable()" id="groupSelect"></select>
    <span>Лабораторная работа: </span><select onchange="CreateTable()" id="laboratoryWorkSelect"></select>
    <button id="randomAssign" class="btn btn-primary edit-item">Назначить случайно</button>
</div>
<div class="container">
<table style="width: 100%" class="table table-hover" border="1">
    <thead>
    <tr>
    <td>ФИО</td>
    <td>Назначенный вариант</td>
    </thead>
    <tbody id="tbodyContent">
</table>
</div>
<script>
    $.ajax(
          {
              type: 'GET',
              url: '/api/disciplines/getall',
              async: false,
              beforeSend: (xhr) => 
              {
                  let token = sessionStorage.getItem(tokenKey);
                  xhr.setRequestHeader("Authorization", "Bearer " + token);
              },
              success: (disciplines) =>
              {
                  let sel = $('#disciplineSelect');
                  
                        if(disciplines.length === 0)
                        {
                            alert('Вы не ведёте ни одной дисциплины');
                            history.go(-1);
                        }
                      for (let discipline of disciplines)
                      {
                          let opt = document.createElement('option');
                          opt.text = discipline.name;
                          opt.dataset.id = discipline.cipher;
                          sel.append(opt);
                      }
              },
              error: (awFail) =>
              {
                  document.body.innerHTML = '';
                  alert('Нет доступа');
                  history.go(-1);
              }
          }
    );
    getComboBoxData();
    CreateTable();
    
    $('#randomAssign').click(() => 
    {
        $.ajax(
            {
                type: 'POST',
                url: '/api/assignedvariants/randomassign',
                beforeSend: (xhr) => 
                {
                    let data = getData();
                    let token = sessionStorage.getItem(tokenKey);
                    xhr.setRequestHeader("Authorization", "Bearer " + token);
                    xhr.setRequestHeader("groupId", data.idGroup);
                    xhr.setRequestHeader("laboratoryWorkId", data.idLw);
                },
                success: (aw) =>
                {
                        CreateTable();                                                                
                },
                error: (awFail) =>
                {
                    document.body.innerHTML = '';
                    alert('Нет доступа');
                    history.go(-1);
                }
            }
        );
    });
    
    function DisciplineSel() {
      getComboBoxData();
    }
    
    
    function CreateTable() {
        let data = getData();
        
        let assignedVariants;
        $.ajax(
                    {
                        type: 'GET',
                        url: '/api/assignedvariants/getall',
                        beforeSend: (xhr) => 
                        {
                            let token = sessionStorage.getItem(tokenKey);
                            xhr.setRequestHeader("Authorization", "Bearer " + token);
                            xhr.setRequestHeader("groupId", data.idGroup);
                            xhr.setRequestHeader("laboratoryWorkId", data.idLw);
                        },
                        success: (aw) =>
                        {
                            assignedVariants = aw;
                        },
                        error: (awFail) =>
                        {
                            document.body.innerHTML = '';
                            alert('Нет доступа');
                            history.go(-1);
                        }
                    }
            );
                    
        $.ajax(
              {
                  type: 'GET',
                  url: '/api/users/getusersbygroup',
                  beforeSend: (xhr) => 
                  {
                      let token = sessionStorage.getItem(tokenKey);
                      xhr.setRequestHeader("Authorization", "Bearer " + token);
                      xhr.setRequestHeader("groupId", data.idGroup);
                  },
                  success: (users) =>
                  {
                      $.ajax(
                            {
                                type: 'GET',
                                url: '/api/variants/getallbylaboratoryid',
                                beforeSend: (xhr) => 
                                {
                                    let token = sessionStorage.getItem(tokenKey);
                                    xhr.setRequestHeader("Authorization", "Bearer " + token);
                                    xhr.setRequestHeader("laboratoryWorkId", data.idLw);
                                },
                                success: (variants) =>
                                {
                                    let tbdy = document.getElementById('tbodyContent');
                                    tbdy.innerHTML = ""; //Удалим все дочерние узлы
                                    if(variants.length === 0)
                                    {
                                        alert("У вас нет вариантов к этой лабораторной работе");
                                        return;
                                    }
                                    for (let user of users)
                                    {
                                        let tr = document.createElement('tr');
                                        tbdy.appendChild(tr);
                                        let tdUser = document.createElement('td');
                                        tr.appendChild(tdUser);
                                        tdUser.appendChild(document.createTextNode(user.name + " " + user.surname + " " + user.patronymic));
                                        tdUser.dataset.id = user.id;
                                        let tdVar = document.createElement('td');
                                        tr.appendChild(tdVar);
                                        let select = document.createElement('select');
                                        tdVar.appendChild(select);
                                        var previous;
                                        $(select).on('focus', (obj) => 
                                        {
                                            previous = obj.currentTarget.value;
                                            console.log(obj.currentTarget);
                                        }).change((obj) => 
                                        {
                                            let current = obj.currentTarget.value;
                                            let userId = $(obj.currentTarget).parent("td").prev("td")[0].dataset.id;
                                            let model = {userId: userId, variantId: current};
                                            if (previous === 'Не назначено')
                                            {
                                                $.ajax(
                                                            {
                                                                type: 'POST',
                                                                url: '/api/assignedvariants/create',
                                                                contentType:  "application/json; charset=utf-8",
                                                                dataType: "json",
                                                                data: JSON.stringify(model),
                                                                beforeSend: (xhr) => 
                                                                {
                                                                    let token = sessionStorage.getItem(tokenKey);
                                                                    xhr.setRequestHeader("Authorization", "Bearer " + token);
                                                                },
                                                                success: (aw) =>
                                                                {
                                                                        CreateTable();                                                                
                                                                },
                                                                error: (awFail) =>
                                                                {
                                                                    document.body.innerHTML = '';
                                                                    alert('Нет доступа');
                                                                    history.go(-1);
                                                                }
                                                            }
                                                        );
                                            }
                                            else
                                            {
                                                $.ajax(
                                                    {
                                                        type: 'POST',
                                                        url: '/api/assignedvariants/update',
                                                        contentType:  "application/json; charset=utf-8",
                                                        dataType: "json",
                                                        data: JSON.stringify(model),
                                                        beforeSend: (xhr) => 
                                                        {
                                                            let token = sessionStorage.getItem(tokenKey);
                                                            xhr.setRequestHeader("Authorization", "Bearer " + token);
                                                            xhr.setRequestHeader("assignedVariantId", obj.currentTarget.dataset.id);
                                                        },
                                                        success: (aw) =>
                                                        {
                                                                 CreateTable();                                                                        
                                                        },
                                                        error: (awFail) =>
                                                        {
                                                            document.body.innerHTML = '';
                                                            alert('Нет доступа');
                                                            history.go(-1);
                                                        }
                                                    }
                                                );
                                            }
                                        });
                                        let isAssigned = false;
                                        for (let variant of variants)
                                        {
                                           let find = assignedVariants.find(x => x.variantId === variant.variantId && x.userId === user.id);
                                           let opt = document.createElement('option');
                                           select.append(opt);
                                           opt.value = opt.innerText = variant.variantNumber;
                                           opt.dataset.id = variant.variantId;
                                           if(find !== undefined)
                                           {
                                               select.dataset.id = find.id;
                                               isAssigned = true;
                                               opt.setAttribute("selected", "selected");
                                           }
                                        }
                                        if(variants.length !== 0 && isAssigned === false)
                                        {
                                            let optDef = document.createElement('option');
                                            select.append(optDef);
                                            optDef.value = optDef.innerText = "Не назначено";
                                            optDef.setAttribute("selected", "selected");
                                        }
                                    }
                                },
                                error: (groupsFail) =>
                                {
                                    document.body.innerHTML = '';
                                    alert('Нет доступа');
                                    history.go(-1);
                                }
                            }
                        );
                  },
                  error: (groupsFail) =>
                  {
                      document.body.innerHTML = '';
                      alert('Нет доступа');
                      history.go(-1);
                  }
              }
          );
          
          
    }
    
    function getData() 
    {
      return { idGroup: $('#groupSelect option:selected')[0].dataset.id, idLw: $('#laboratoryWorkSelect option:selected')[0].dataset.id }
    }
    
    function getAssignedVariantData(obj) {
        return {UserId: obj.parentNode.previousSibling.dataset.id, VariantId: obj.options[obj.options.selectedIndex].dataset.id};
    }
    
    function getComboBoxData()
    {
        let disciplineId = $('#disciplineSelect option:selected')[0].dataset.id;
        $.ajax(
            {
                type: 'GET',
                url: '/api/groups/getallbydisciplineid',
                async:false,
                beforeSend: (xhr) => 
                {
                    let token = sessionStorage.getItem(tokenKey);
                    xhr.setRequestHeader("Authorization", "Bearer " + token);
                    xhr.setRequestHeader("disciplineCipher", disciplineId);
                },
                success: (groups) =>
                {
                    let sel = $('#groupSelect');
                    for (let group of groups)
                    {
                        let opt = document.createElement('option');
                        opt.text = group.name;
                        opt.dataset.id = group.groupId;
                        sel.append(opt);
                    }
                    
                },
                error: (groupsFail) =>
                {
                    document.body.innerHTML = '';
                    alert('Нет доступа');
                    history.go(-1);
                }
            }
        );
        
        $.ajax(
                    {
                        type: 'GET',
                        url: '/api/laboratoryworks/getallbydiscipline',
                        async:false,
                        beforeSend: (xhr) => 
                        {
                            let token = sessionStorage.getItem(tokenKey);
                            xhr.setRequestHeader("Authorization", "Bearer " + token);
                            xhr.setRequestHeader("disciplineCipher", disciplineId);
                        },
                        success: (laboratoryWorks) =>
                        {
                            let sel = $('#laboratoryWorkSelect');
                            for (let lw of laboratoryWorks)
                            {
                                let opt = document.createElement('option');
                                opt.dataset.id = lw.laboratoryWorkId;
                                opt.text = lw.name;
                                sel.append(opt);
                            }
                        },
                        error: (groupsFail) =>
                        {
                            document.body.innerHTML = '';
                            alert('Нет доступа');
                            history.go(-1);
                        }
                    }
                );
        }
        
        
</script>