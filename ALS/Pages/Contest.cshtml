@page
@model ALS.Pages.Contest

@{
    Layout = "_Layout";
    ViewData["Title"] = "Отправить решение";
}
<h3>Проверка работ </h3>
<div style="margin-bottom: 1%">
    <span>Дисциплина: </span><select onchange="CreateTable()" id="disciplineSelect"></select>
</div>
<div class="container">
<table style="width: 100%" class="table table-hover" border="1">
    <thead>
    <tr>
    <td>Лабораторная работа</td>
    <td>Описание лабораторной работы</td>    
    <td>Номер варианта</td>
    <td>Описание варианта</td>
    <td>Статус</td>
    </thead>
    <tbody id="tbodyContent">
</table>
</div>

<script>
    let tokenKey = "accessToken";
        
    $.ajax(
              {
                  type: 'GET',
                  url: '/api/disciplines/getall',
                  async: false,
                  beforeSend: (xhr) => 
                  {
                      let token = sessionStorage.getItem(tokenKey);
                      xhr.setRequestHeader("Authorization", "Bearer " + token);
                  },
                  success: (disciplines) =>
                  {
                      let sel = $('#disciplineSelect');
                      
                            if(disciplines.length === 0)
                            {
                                alert('Не назначена ни одна дисциплина');
                                history.go(-1);
                            }
                          for (let discipline of disciplines)
                          {
                              let opt = document.createElement('option');
                              opt.text = discipline.name;
                              opt.dataset.id = discipline.cipher;
                              sel.append(opt);
                          }
                  },
                  error: (awFail) =>
                  {
                      document.body.innerHTML = '';
                      alert('Нет доступа');
                      history.go(-1);
                  }
              }
        );
    
        CreateTable();
        
        function getDiscipline() 
        {
          return $('#disciplineSelect option:selected')[0].dataset.id;
        }
        function sendSolution(evt)
        {
            var files = evt.target.files; // FileList object
            var dataFile = new FormData();
            dataFile.append('uploadedSource', files[0]);
            /*for (var i = 0, f; f = files[i]; i++) {

            }*/
            $.ajax(
                {
                    type: 'POST',
                    url: '/api/Checks/Check',
                    contentType: false,
                    data: dataFile,
                    dataType: "json",
                    processData: false,
                    async: false,
                    beforeSend: (xhr) =>
                    {
                        let token = sessionStorage.getItem(tokenKey);
                        xhr.setRequestHeader("Authorization", "Bearer " + token);
                        xhr.setRequestHeader("variantId", evt.target.dataset.id);
                    },
                    success: (result) =>
                    {
                        let tbdy = document.getElementById('tbodyContent');
                        tbdy.innerHTML = ""; //Удалим все дочерние узлы
                        alert(result.responseText);
                    },
                    error: (sendFail) =>
                    {
                        alert(sendFail.responseText);
                    }
                }
            );
        }
        function CreateTable() {
            var disciplineId = getDiscipline();
            
            $.ajax(
                          {
                              type: 'GET',
                              url: '/api/AssignedVariants/GetWorkVariants',
                              contentType:  "application/json; charset=utf-8",
                              dataType: "json",
                              async: false,
                              beforeSend: (xhr) => 
                              {
                                  let token = sessionStorage.getItem(tokenKey);
                                  xhr.setRequestHeader("Authorization", "Bearer " + token);
                                  xhr.setRequestHeader("disciplineId", disciplineId);
                              },
                              success: (result) =>
                              {
                                  let tbdy = document.getElementById('tbodyContent');
                                  tbdy.innerHTML = ""; //Удалим все дочерние узлы
                                  for(let task of result)
                                  {
                                      let tr = document.createElement('tr');
                                      tbdy.appendChild(tr);

                                      let tdNameLab = document.createElement('td');
                                      tdNameLab.appendChild(document.createTextNode(task.name));
                                      tr.appendChild(tdNameLab);

                                      let tdDescLab = document.createElement('td');
                                      tdDescLab.appendChild(document.createTextNode(task.description));
                                      tr.appendChild(tdDescLab);

                                      let tdVariantNumber = document.createElement('td');
                                      tdVariantNumber.appendChild(document.createTextNode(task.variant.variantId));
                                      tr.appendChild(tdVariantNumber);

                                      let tdVariantDesc = document.createElement('td');
                                      tdVariantDesc.appendChild(document.createTextNode(task.variant.description));
                                      tr.appendChild(tdVariantDesc);

                                      let tdSolution = document.createElement('td');
                                      if (task.isSolved)
                                      {
                                          tdSolution.appendChild(document.createTextNode("Задача решена"));
                                      }
                                      else
                                      {
                                          let buttonSend = document.createElement('input');
                                          buttonSend.type = "file";
                                          buttonSend.id = "files";
                                          buttonSend.accept = ".cpp, .h, .c";
                                          buttonSend.dataset.id = task.variant.variantId;
                                          buttonSend.className = "btn btn-primary edit-item";
                                          tdSolution.appendChild(buttonSend);
                                      }
                                      tr.appendChild(tdSolution);
                                  }
                              },
                              error: (awFail) =>
                              {
                                  document.body.innerHTML = '';
                                  alert('Нет доступа');
                                  history.go(-1);
                              }
                          }
            );
            document.getElementById('files').addEventListener('change', sendSolution, false);
        }
        
</script>