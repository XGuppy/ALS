@page
@model ALS.Pages.TemplatesModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Шаблоны лабораторных работ";
}

<h4>@ViewData["Title"]</h4>
<div class="container">
    <table class="table table-hover">
        <tr>
            <td>#</td>
            <td>Тема</td>
            <td>Путь до файла</td>
            <td>Действия</td>
        </tr>
        @foreach (var item in Model.Templates)
        {
            <tr>
                <td>@item.TemplateLaboratoryWorkId</td>
                <td>@item.Theme.Name</td>
                <td>@item.TemplateTask.Substring(item.TemplateTask.LastIndexOf('/')+1)</td>
                <td>
                    <input type="button" id="buttonDelete" value="Удалить" onclick="deleteTlw(@item.TemplateLaboratoryWorkId)" /> |
                    <input type="button" id="buttonUpdate" value="Изменить" onclick="updateTlw(@item.TemplateLaboratoryWorkId, @item.ThemeId, '@item.TemplateTask')" />
                </td>
            </tr>
        }
    </table>
    <input id="buttonCreate" type="submit" value="Создать" onclick="openModalCreate()" />
</div>

<div id="myModal" class="modal fade bd-example-modal-lg">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Редактирование шаблона</h4><button class="close" type="button" data-dismiss="modal">×</button>
            </div>
            <div class="modal-body">
                <form method="post">
                    <label>Тема : </label>
                    @Html.DropDownList("ThemeId", Model.Themes, new { @id = "newThemeId" })
                    <input id="hiddenId" name="hiddenId" value="1" hidden>
                    <p>
                        <label>Путь до файла : </label>
                        <input id="path" name="path" value="1">
                    </p>
                    <p>
                        <textarea id="textAreaModel" name="textAreaModel" cols="80" rows="30"></textarea>
                    </p>
                    <p><input type="button" value="Отправить" id="submitUpdate" onclick="update()" /></p>
                </form>
            </div>
            <div class="modal-footer"><button class="btn btn-default" type="button" data-dismiss="modal">Закрыть</button></div>
        </div>
    </div>
</div>

<div id="myModalCreate" class="modal fade bd-example-modal-lg">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Создание шаблона</h4><button class="close" type="button" data-dismiss="modal">×</button>
            </div>
            <div class="modal-body">
                <form method="post" enctype="multipart/form-data">
                    <div class="form-group">
                        <label class="control-label">Тема</label>
                        <select id="selectThemeId" name="themeId" asp-items="@Model.Themes"></select>
                    </div>
                    <div id="fileselecting" class="form-group">
                        <label class="control-label">Файл с шаблоном</label>
                    </div>
                </form>
            </div>
            <div class="modal-footer"><button class="btn btn-default" type="button" data-dismiss="modal">Закрыть</button></div>
        </div>
    </div>
</div>

<script>
    /*let username = "userName";
    let userId = "userId";
    window.onload = function () {
        $('#hiddenUserId').val(sessionStorage.getItem(userId));
    };*/
    let tokenKey = "accessToken";

    function sendSolution(evt)
    {
            var files = evt.target.files; // FileList object
            var dataFile = new FormData();
            for (var i = 0; i < files.length; i++) {
                dataFile.append('upload', files[i]);
            }
            var selector = document.getElementById('selectThemeId');
            var value = selector[selector.selectedIndex].value;

            $.ajax(
                {
                    type: 'POST',
                    url: '/api/TemplateLWS/Create',
                    contentType: false,
                    data: dataFile,
                    processData: false,
                    async: false,
                    beforeSend: (xhr) =>
                    {
                        let token = sessionStorage.getItem(tokenKey);
                        xhr.setRequestHeader("Authorization", "Bearer " + token);
                        xhr.setRequestHeader("themeid", value);
                    },
                    success: (result) =>
                    {                    
                        document.location.reload(true);
                    },
                    error: (sendFail) =>
                    {
                        alert(sendFail.responseText);
                    }
                }
            );
    }

    $.ajax(
        {
            type: 'GET',
            url: '/api/TemplateLWS/CheckAuth',
            beforeSend: (xhr) => 
            {
                let token = sessionStorage.getItem(tokenKey);
                xhr.setRequestHeader("Authorization", "Bearer " + token);
            },
            success: (_) =>
            {
                let div = document.getElementById('fileselecting');
                let buttonSend = document.createElement('input');
                buttonSend.type = "file";
                buttonSend.className = "files";
                buttonSend.accept = ".*";
                buttonSend.multiple = false;
                buttonSend.addEventListener('change', sendSolution, false);
                buttonSend.className = "btn btn-primary edit-item";
                div.appendChild(buttonSend);
            },
            error: (_) =>
            {
                document.body.innerHTML = '';
                alert('Нет доступа');
                history.go(-1);
            }
        }
    );

    function openModalCreate() {
        $('#myModalCreate').modal('show');
    }

    function updateTlw(tlwId, themeid, pathFile) {

        $("#myModal").find("textarea[id='textAreaModel']").val('');
        $.ajax(
            {
                type: 'GET',
                url: '/api/TemplateLWS/ReadFile',
                beforeSend: (xhr) => {
                    let token = sessionStorage.getItem(tokenKey);
                    xhr.setRequestHeader("Authorization", "Bearer " + token);
                    xhr.setRequestHeader('path', pathFile);
                },
                success: (response) => {
                    $("#myModal").find("textarea[id='textAreaModel']").val(response);
                },
                error: (response) => {
                    alert('Ошибка при чтении файла : ' + pathFile);
                    $('#myModal').modal('hide');
                }
            }
        );

        $("#myModal").find("input[name='hiddenId']").val(tlwId);
        $("#myModal").find("input[id='path']").val(pathFile);
        
        /*$('#newThemeId option:selected').each(function () {
            this.selected = false;
        });*/
        $("#newThemeId").find('option').attr("selected",false) ;
        $("#newThemeId option[value='" + themeid + "']").attr("selected", "selected");
        $('#myModal').modal('show');
    }

    function update() {
        let text = $("#myModal").find("textarea[id='textAreaModel']").val();
        let twlId = $("#myModal").find("input[id='hiddenId']").val();
        let themeId = $("#myModal").find("select[id='newThemeId']").val();
        let path = $("#myModal").find("input[id='path']").val();
        let datas = {
            //content: text,
            //pathToFile : path
            Item1: path,
            Item2 : text
        }
        $.ajax(
            {
                type: 'POST',
                url: '/api/TemplateLWS/WriteFile',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(datas),
                beforeSend: (xhr) => {
                    let token = sessionStorage.getItem(tokenKey);
                    xhr.setRequestHeader("Authorization", "Bearer " + token);
                },
                success: (data) => {
                    //document.location.reload(true);
                },
                error: (response) => {
                    console.log(response);
                    alert('Не удалось обновить шаблон');
                }
            }
        );

        let tdto = {
            TemplateTask: path,
            ThemeId: themeId,
        };
        $.ajax(
            {
                type: 'POST',
                url: '/api/TemplateLWS/Update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(tdto),
                beforeSend: (xhr) => {
                    let token = sessionStorage.getItem(tokenKey);
                    xhr.setRequestHeader("Authorization", "Bearer " + token);
                    //xhr.setRequestHeader("groupId", $('#EditGroupId').val());
                    xhr.setRequestHeader("templateId", twlId);
                },
                success: (d) => {
                    document.location.reload(true);
                },
                error: (response) => {
                    console.log(response);
                    alert('Не удалось обновить шаблон');
                }
            }
        );   

    }

    function deleteTlw(data) {
        if (confirm("Уверены, что хотите удалить данный шаблон")) {
            $.ajax(
                {
                    type: 'POST',
                    url: '/api/TemplateLWS/Delete',
                    beforeSend: (xhr) => {
                        let token = sessionStorage.getItem(tokenKey);
                        xhr.setRequestHeader("Authorization", "Bearer " + token);
                        xhr.setRequestHeader('templateId', data);
                    },
                    success: (t) => {
                        document.location.reload(true);          
                    },
                    error: (response) => {
                        alert('Удаление невозможно! Данный шаблон еще связан с лабораторными работами');
                    }
                }
            );
        }
    }
</script>
