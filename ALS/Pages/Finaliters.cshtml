@page
@model ALS.Pages.Checkers

@{
    Layout = "_Layout";
    ViewData["Title"] = "Добавить завершитель";
}

<h3>Завершители </h3>
<div style="margin-bottom: 1%">
    <input onchange="sendSolution(this)" class="btn btn-primary edit-item" type="file" accept=".cs"/>
</div>
<div class="container">
    <table style="width: 100%" class="table table-hover" border="1">
        <thead>
        <tr>
        <td>Наименование завершителя</td>
        <td>Просмотреть код завершителя</td>
        <td>Удалить завершитель</td>
        </thead>
        <tbody id="tbodyContent">
    </table>
</div>
<div id="checkerModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header"><h4 class="modal-title">Текст завершителя</h4><button class="close" type="button" data-dismiss="modal">×</button>
            </div>
            <div id="checkerTextContent" class="modal-body">
            </div>
            <div class="modal-footer"><button class="btn btn-default" type="button" data-dismiss="modal">Закрыть</button></div>
        </div>
    </div>
</div>

<script>
    CreateTable();
    
    function CreateTable() {
        $.ajax(
                    {
                        type: 'GET',
                        url: '/api/finaliter/getall',
                        beforeSend: (xhr) => 
                        {
                            let token = sessionStorage.getItem(tokenKey);
                            xhr.setRequestHeader("Authorization", "Bearer " + token);
                        },
                        success: (checkers) =>
                        {
                            let tbdy = document.getElementById('tbodyContent');
                            tbdy.innerHTML = ""; //Удалим все дочерние узлы
                            for (let checker of checkers)
                            {
                                let tr = document.createElement('tr');
                                tbdy.appendChild(tr);
                                let tdChecker = document.createElement('td');
                                tr.appendChild(tdChecker);
                                tdChecker.appendChild(document.createTextNode(checker));
                                let tdGetCode = document.createElement('td');
                                tr.appendChild(tdGetCode);
                                let getCodeBtn = document.createElement('button');
                                getCodeBtn.className = "btn btn-primary edit-item";
                                getCodeBtn.addEventListener('click', function() {
                                    ReadCodeChecker(checker)
                                });
                                getCodeBtn.innerText = "Получить код";
                                tdGetCode.appendChild(getCodeBtn);
                                getCodeBtn.setAttribute('data-target', '#checkerModal');
                                getCodeBtn.setAttribute('data-toggle', 'modal');
                                let tdRemoveChecker = document.createElement('td');
                                tr.appendChild(tdRemoveChecker);
                                let removeCheckerBtn = document.createElement('button');
                                removeCheckerBtn.className = "btn btn-danger remove-item";
                                removeCheckerBtn.addEventListener('click', function() {
                                  RemoveChecker(checker);
                                });
                                removeCheckerBtn.innerText = "Удалить завершитель";
                                tdRemoveChecker.appendChild(removeCheckerBtn);
                            }
                        },
                        error: (checkerFail) =>
                        {
                            document.body.innerHTML = '';
                            alert('Нет доступа');
                            history.go(-1);
                            
                        }
                    }
            );
    }
  function ReadCodeChecker(nameChecker) {
        $.ajax(
             {
                type: 'GET',
                url: '/api/finaliter/get',
                beforeSend: (xhr) => 
                {
                    let token = sessionStorage.getItem(tokenKey);
                    xhr.setRequestHeader("Authorization", "Bearer " + token);
                    xhr.setRequestHeader("nameComponent", nameChecker);
                },
                success: (textChecker) =>
                {
                    document.getElementById('checkerTextContent').innerText = textChecker;
                },
                error: (checkerFail) =>
                {
                    document.body.innerHTML = '';
                    alert('Нет доступа');
                    history.go(-1);
                    
                }
             }
         )
  }
  
  function RemoveChecker(nameChecker) {
    $.ajax(
                 {
                    type: 'POST',
                    url: '/api/finaliter/Delete',
                    beforeSend: (xhr) => 
                    {
                        let token = sessionStorage.getItem(tokenKey);
                        xhr.setRequestHeader("Authorization", "Bearer " + token);
                        xhr.setRequestHeader("nameComponent", nameChecker);
                    },
                    success: (textChecker) =>
                    {
                        CreateTable();
                        alert(textChecker);
                    },
                    error: (checkerFail) =>
                    {
                        document.body.innerHTML = '';
                        alert('Нет доступа');
                        history.go(-1);
                        
                    }
                 }
             );
  }
  
  function sendSolution(evt)
          {
              var files = evt.files; // FileList object
              var dataFile = new FormData();
              for (var i = 0; i < files.length; i++) {
                  dataFile.append('componentFile', files[i]);
              }
              $.ajax(
                  {
                      type: 'POST',
                      url: '/api/finaliter/Create',
                      contentType: false,
                      data: dataFile,
                      processData: false,
                      async: false,
                      beforeSend: (xhr) =>
                      {
                          let token = sessionStorage.getItem(tokenKey);
                          xhr.setRequestHeader("Authorization", "Bearer " + token);
                      },
                      success: (result) =>
                      {
                          CreateTable();
                          alert(result);
                      },
                      error: (sendFail) =>
                      {
                          alert(sendFail.responseText);
                      }
                  }
              );
          }
</script>