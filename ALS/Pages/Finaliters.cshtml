@page
@model ALS.Pages.Checkers

@{
    Layout = "_Layout";
    ViewData["Title"] = "Добавить завершитель";
}

<h3>Завершитель </h3>
<div style="margin-bottom: 1%">
    <input onchange="sendSolution(this)" class="btn btn-primary edit-item" type="file" accept=".cs"/>
    <span style="float: right; text-align: right; color: aliceblue; font-size: 120%" id="loader"></span>
</div>
<div class="container">
    <table style="width: 100%" class="table table-hover" border="1">
        <thead>
        <tr>
        <td>Наименование завершителя</td>
        <td>Просмотреть код завершителя</td>
        <td>Удалить завершитель</td>
        </thead>
        <tbody id="tbodyContent">
    </table>
</div>

<script>
    CreateTable();
    
    function CreateTable() {
        $.ajax(
                    {
                        type: 'GET',
                        url: '/api/finaliter/getall',
                        beforeSend: (xhr) => 
                        {
                        },
                        success: (checkers) =>
                        {
                            let tbdy = document.getElementById('tbodyContent');
                            tbdy.innerHTML = ""; //Удалим все дочерние узлы
                            for (let checker of checkers)
                            {
                                let tr = document.createElement('tr');
                                tbdy.appendChild(tr);
                                let tdChecker = document.createElement('td');
                                tr.appendChild(tdChecker);
                                tdChecker.appendChild(document.createTextNode(checker));
                                let tdGetCode = document.createElement('td');
                                tr.appendChild(tdGetCode);
                                let getCodeBtn = document.createElement('button');
                                getCodeBtn.className = "btn btn-primary edit-item";
                                getCodeBtn.addEventListener('click', function() {
                                    ReadCodeChecker(checker)
                                });
                                getCodeBtn.innerText = "Получить код";
                                tdGetCode.appendChild(getCodeBtn);
                                let tdRemoveChecker = document.createElement('td');
                                tr.appendChild(tdRemoveChecker);
                                let removeCheckerBtn = document.createElement('button');
                                if(checker === 'AbsoluteFinaliter')
                                {
                                    removeCheckerBtn.disabled = true;
                                }
                                removeCheckerBtn.className = "btn btn-danger remove-item";
                                removeCheckerBtn.addEventListener('click', function() {
                                  RemoveChecker(checker);
                                });
                                removeCheckerBtn.innerText = "Удалить завершитель";
                                tdRemoveChecker.appendChild(removeCheckerBtn);
                            }
                        },
                        error: (checkerFail) =>
                        {
                            document.body.innerHTML = '';
                            alert('Нет доступа');
                            history.go(-1);
                            
                        }
                    }
            );
    }
  function ReadCodeChecker(nameChecker) {
        window.open('/api/Finaliter/Get?nameComponent=' + nameChecker);
  }
  
  function RemoveChecker(nameChecker) {
        if (confirm("Вы точно хотите удалить этот завершитель?")) {
         let loader = document.getElementById('loader');
            $.ajax(
                         {
                            type: 'POST',
                            url: '/api/finaliter/Delete',
                            beforeSend: (xhr) => 
                            {
                                loader.style.backgroundColor = " #3366CC";
                                loader.innerText = "Идёт процесс удаления";
                                xhr.setRequestHeader("nameComponent", nameChecker);
                            },
                            success: (textChecker) =>
                            {
                                loader.style.backgroundColor = " #FFFFFF";
                                loader.innerText = "";
                                CreateTable();
                                alert(textChecker);
                            },
                            error: (checkerFail) =>
                            {
                                loader.style.backgroundColor = " #FFFFFF";
                                loader.innerText = "";
                                alert(checkerFail.responseText);
                            }
                         }
                     );
            }
  }
  
  function sendSolution(evt)
          {
              var files = evt.files; // FileList object
              var dataFile = new FormData();
              for (var i = 0; i < files.length; i++) {
                  dataFile.append('componentFile', files[i]);
              }
              let loader = document.getElementById('loader');
              $.ajax(
                  {
                      type: 'POST',
                      url: '/api/finaliter/Create',
                      contentType: false,
                      data: dataFile,
                      processData: false,
                      async: false,
                      beforeSend: (xhr) =>
                      {
                          loader.style.backgroundColor = " #3366CC";
                          loader.innerText = "Идёт загрузка";
                      },
                      success: (result) =>
                      {
                          loader.style.backgroundColor = " #FFFFFF";
                          loader.innerText = "";
                          CreateTable();
                          alert(result);
                      },
                      error: (sendFail) =>
                      {
                          loader.style.backgroundColor = " #FFFFFF";
                          loader.innerText = "";
                          alert(sendFail.responseText);
                      }
                  }
              );
          }
          function loaderSet(text) {
              let loader = document.getElementById('loader');
              loader.style.backgroundColor = "#007bff";
              loader.innerText = text;
            }
            function loaderDiasble() {
              let loader = document.getElementById('loader');
              loader.style.backgroundColor = "#ffffff";
              loader.innerText = "";
            }
</script>