@page
@model ALS.Pages.GenExtensionsModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Расширение возможностей генератора";
}

<h4>@ViewData["Title"]</h4>
<div class="container">
    <table style="width: 100%" class="table table-hover" border="1">
        <tr>
            <td>#</td>
            <td>Путь до файла-расширения</td>
        </tr>
        @foreach (var item in Model.Extensions)
        {
            <tr>
                <td>@item.GenExtensionId</td>
                <td>@item.Extension.Substring(item.Extension.LastIndexOf("genExtensions"))</td>
                <td>
                    <input type="button" id="buttonUpdate" class="btn btn-primary edit-item" value="Редактировать" onclick="updateExt(@item.GenExtensionId, '@item.Extension' )" />
                    <input type="button" id="buttonDelete" class="btn btn-danger remove-item" value="Удалить" onclick="deleteExt(@item.GenExtensionId)" />
                </td>
            </tr>
        }
    </table>
    <input id="buttonCreate" class="btn btn-info btn-lg" type="submit" value="Создать" onclick="openModalCreate()" />
</div>

<div id="myModal" class="modal fade bd-example-modal-lg">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Редактирование шаблона</h4><button class="close" type="button" data-dismiss="modal">×</button>
            </div>
            <div class="modal-body">
                <form method="post">
                    <input id="hiddenId" name="hiddenId" value="1" hidden>
                    <input id="path" class="form-control col-sm-10" name="path" value="1" hidden>
                    <p>
                        <label class="col-form-label font-weight-bold">Содержимое</label>
                        <textarea id="textAreaModel" class="form-control" name="textAreaModel" rows="30"></textarea>
                    </p>
                    <p><input type="button" class="btn btn-info btn-lg" value="Отправить" id="submitUpdate" onclick="update()" /></p>
                </form>
            </div>
            <div class="modal-footer"><button class="btn btn-default" type="button" data-dismiss="modal">Закрыть</button></div>
        </div>
    </div>
</div>

<div id="myModalCreate" class="modal fade bd-example-modal-lg">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Создание расширения</h4><button class="close" type="button" data-dismiss="modal">×</button>
            </div>
            <div class="modal-body">
                <form method="post" enctype="multipart/form-data">
                    <div id="fileselecting" class="form-group row">
                        <label class="col-sm-2 col-form-label font-weight-bold">Файл с расширением</label>
                    </div>
                </form>
            </div>
            <div class="modal-footer"><button class="btn btn-default" type="button" data-dismiss="modal">Закрыть</button></div>
        </div>
    </div>
</div>

<script>
    function sendExtension(evt) {
        var files = evt.target.files; // FileList object
        var dataFile = new FormData();
        for (var i = 0; i < files.length; i++) {
            dataFile.append('upload', files[i]);
        }

        $.ajax(
            {
                type: 'POST',
                url: '/api/GenExtensions/Create',
                contentType: false,
                data: dataFile,
                processData: false,
                async: false,
                beforeSend: (xhr) => {
                },
                success: (result) => {
                    document.location.reload(true);
                },
                error: (response) => {
                    alert(response.responseText);
                }
            }
        );
    }

    $.ajax(
        {
            type: 'GET',
            url: '/api/GenExtensions/CheckAuth',
            beforeSend: (xhr) => {
            },
            success: (_) => {
                let div = document.getElementById('fileselecting');
                let buttonSend = document.createElement('input');
                buttonSend.type = "file";
                buttonSend.className = "files";
                buttonSend.accept = ".lua";
                buttonSend.multiple = false;
                buttonSend.addEventListener('change', sendExtension, false);
                buttonSend.className = "btn btn-primary edit-item";
                div.appendChild(buttonSend);
            },
            error: (_) => {
                document.body.innerHTML = '';
                alert('Нет доступа');
                history.go(-1);
            }
        }
    );

    function openModalCreate() {
        $('#myModalCreate').modal('show');
    }

    function updateExt(extId, pathFile) {

        $("#myModal").find("textarea[id='textAreaModel']").val('');
        $.ajax(
            {
                type: 'GET',
                url: '/api/GenExtensions/ReadFile',
                beforeSend: (xhr) => {
                    xhr.setRequestHeader('path', pathFile);
                },
                success: (response) => {
                    $("#myModal").find("textarea[id='textAreaModel']").val(response);
                },
                error: (response) => {
                    alert('Ошибка при чтении файла : ' + pathFile);
                    $('#myModal').modal('hide');
                }
            }
        );

        $("#myModal").find("input[name='hiddenId']").val(extId);
        $("#myModal").find("input[id='path']").val(pathFile);
        $('#myModal').modal('show');
    }

    function update() {
        let text = $("#myModal").find("textarea[id='textAreaModel']").val();
        let extId = $("#myModal").find("input[id='hiddenId']").val();
        let path = $("#myModal").find("input[id='path']").val();
        let datas = {
            Item1: path,
            Item2: text
        }
        $.ajax(
            {
                type: 'POST',
                url: '/api/GenExtensions/WriteFile',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(datas),
                beforeSend: (xhr) => {
                },
                success: (data) => {
                    //document.location.reload(true);
                },
                error: (response) => {
                    console.log(response.responseText);
                    alert('Не удалось обновить расширение');
                }
            }
        );

        let extDTO = {
            Item1: extId,
            Item2: path
        };
        $.ajax(
            {
                type: 'POST',
                url: '/api/GenExtensions/Update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(extDTO),
                beforeSend: (xhr) => {
                },
                success: (d) => {
                    document.location.reload(true);
                },
                error: (response) => {
                    console.log(response.responseText);
                    alert('Не удалось обновить шаблон');
                }
            }
        );

    }

    function deleteExt(data) {
        if (confirm("Уверены, что хотите удалить данный шаблон")) {
            $.ajax(
                {
                    type: 'POST',
                    url: '/api/GenExtensions/Delete',
                    beforeSend: (xhr) => {
                        xhr.setRequestHeader('extId', data);
                    },
                    success: (t) => {
                        document.location.reload(true);
                    },
                    error: (response) => {
                        alert('Удаление невозможно!');
                    }
                }
            );
        }
    }
</script>