@page
@model ALS.Pages.Variants
@{
    Layout = "_Layout";
    ViewData["Title"] = "Варианты";
}
<table style="width: 100%" border="1">
    <thead>
    <tr>
    <td>Лабораторная работа</td>
    <td>Номер варианта</td>    
    <td>Описание</td>
    <td>Ссылка на модель (эталонная программа)</td>
    <td>Входные данные</td>
    <td>Действие</td>
    </thead>
    <tbody id="tbodyContent">
</table>

<button class="btn btn-info btn-lg" type="button" data-toggle="modal" data-target="#myModal">Добавить вариант</button>
<div id="myModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header"><h4 class="modal-title">Новый вариант</h4><button class="close" type="button" data-dismiss="modal">×</button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Create", "Variants", FormMethod.Post))
                {
                    <p>@Html.Label("Лабораторная работа:\t")
                    <select name="LaboratoryWorkId" id="newLaboratoryWork"></select></p>
                    @Html.Label("Номер варианта:\t")
                    @Html.TextBox("Number", "1", new {id = "newNumber"})
                    @Html.Label("Описание варианта:\t")
                    @Html.TextArea("Description", "desc", new {id = "newDescription"})
                    @Html.Label("Ссылка на модель:\t")
                    @Html.TextArea("Link", @"file:///C:/Users/kampukter/source/repos/ALS/ALS.GeneratorModule/Docs/Exp.txt", new {id = "newLink"})
                    @Html.Label("Входные данные:\t")
                    @Html.TextArea("InputData", "[{\"Data\": [\"#rnd(1 | 20 | int | 10)\"], \"Name\": \"тест1\"}, {\"Data\": [\"#rnd(1 | 20 | int | 10)\"], \"Name\": \"тест2\"}, {\"Data\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"], \"Name\": \"тест3\"}]", new {id = "newInputData"})
                    <p><input type="button" class="btn btn-dark" value="Отправить" onclick="createVariant()" /></p>
                }
            </div>
            <div class="modal-footer"><button class="btn btn-default" type="button" data-dismiss="modal">Закрыть</button></div>
        </div>
    </div>
</div>

<div id="edit" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header"><h4 class="modal-title">Редактирование варианта</h4><button class="close" type="button" data-dismiss="modal">×</button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Update", "Variants", FormMethod.Post))
                {
                    <p>
                    @Html.Label("Лабораторная работа:\t")
                    <select name="LaboratoryWorkId" id="EditLaboratoryWork"></select>
                    </p>
                    @Html.Label("Номер варианта:\t")
                    @Html.TextBox("Number", null, new {id = "EditNumber"})
                    @Html.Label("Описание варианта:\t")
                    @Html.TextArea("Description", null, new {id = "EditDescription"})
                    @Html.Label("Ссылка на модель:\t")
                    @Html.TextArea("Link", null, new {id = "EditLink"})
                    @Html.Label("Входные данные:\t")
                    @Html.TextArea("InputData", null, new {id = "EditInputData"})
                    @Html.Hidden("variantId", null, new {id = "EditVariantId"})
                    <p><input type="button" class="btn btn-dark" value="Отправить" onclick="editVariant()" /></p>
                }
            </div>
            <div class="modal-footer"><button class="btn btn-default" type="button" data-dismiss="modal">Закрыть</button></div>
        </div>
    </div>
</div>


<script>
    let tokenKey = "accessToken";
    $.ajax(
        {
            type: 'GET',
            url: '/api/variants/getall',
            beforeSend: (xhr) => 
            {
                let token = sessionStorage.getItem(tokenKey);
                xhr.setRequestHeader("Authorization", "Bearer " + token);
            },
            success: (variants) =>
            {
                let tbdy = document.getElementById('tbodyContent');
                for (let variant of variants)
                {
                    let tr = document.createElement('tr');
                    for(let prop in variant)
                    {
                        if(prop !== 'variantId' && prop !== 'laboratoryWorkId')
                        {
                            let td = document.createElement('td');
                            if(variant[prop] != null)
                                td.appendChild(document.createTextNode(variant[prop]));
                            if(prop === 'name')
                                td.dataset.id = variant.laboratoryWorkId;
                            tr.appendChild(td);
                        }
                    }
                    let td = document.createElement('td');
                    td.dataset.id = variant.variantId;
                    td.innerHTML = '<button style="margin-right: 5%" data-toggle="modal" onclick="editPrepareVariant(this)" data-target="#edit" class="btn btn-primary edit-item">Редактировать</button>' +
                     '<button onclick="removeVariant('+ variant.variantId +')" class="btn btn-danger remove-item">Удалить</button>';
                    tr.appendChild(td);
                    tbdy.appendChild(tr);
                }
            },
            error: (varFail) =>
            {
                document.body.innerHTML = '';
                alert('Нет доступа');
                history.go(-1);
            }
        }
    );
    
    $.ajax(
            {
                type: 'GET',
                url: '/api/laboratoryworks/getall',
                beforeSend: (xhr) => 
                {
                    let token = sessionStorage.getItem(tokenKey);
                    xhr.setRequestHeader("Authorization", "Bearer " + token);
                },
                success: (lws) =>
                {
                    let selectCreate = document.getElementById('newLaboratoryWork');
                    let selectUpdate = document.getElementById('EditLaboratoryWork');
                    for (let lw of lws)
                    {
                        let opt = document.createElement('option');
                        opt.dataset.id = lw.laboratoryWorkId;
                        opt.innerText = lw.name;
                        selectCreate.appendChild(opt.cloneNode(true));
                        selectUpdate.appendChild(opt);
                    }
                },
                error: (labFail) =>
                {
                    console.log(labFail);
                    document.body.innerHTML = '';
                    alert('Нет доступа');
                    history.go(-1);
                }
            }
        );
    
    function createVariant() {
              let variant = {
                           LaboratoryWorkId: $('#newLaboratoryWork option:selected')[0].dataset.id,
                           VariantNumber: $('#newNumber').val(),
                           Description: $('#newDescription').val(),
                           LinkToModel: $('#newLink').val(),
                           InputDataRuns: $('#newInputData').val()
                           };
              $.ajax(
                  {
                      type: 'POST',
                      url: '/api/variants/create',
                      contentType:  "application/json; charset=utf-8",
                      dataType: "json",
                      data: JSON.stringify(variant),
                      beforeSend: (xhr) =>
                      {
                           let token = sessionStorage.getItem(tokenKey);
                           xhr.setRequestHeader("Authorization", "Bearer " + token);
                      },
                      success: (g) =>
                      {
                          document.location.reload(true);
                      },
                      error: (response) =>
                      {
                          console.log(response);
                          alert('Не удалось добавить вариант');
                      }
                  }
                );
    }
      function removeVariant(variantId) {
                    if(confirm("Вы точно хотите удалить этот вариант?"))
                    {
                        $.ajax(
                            {
                                type: 'POST',
                                url: '/api/variants/delete',
                                beforeSend: (xhr) =>
                                {
                                     let token = sessionStorage.getItem(tokenKey);
                                     xhr.setRequestHeader("Authorization", "Bearer " + token);
                                     xhr.setRequestHeader("variantId", variantId)
                                },
                                success: (g) =>
                                {
                                    document.location.reload(true);
                                },
                                error: (response) =>
                                {
                                    console.log(response);
                                    alert('Вариант решают студенты =)');
                                }
                            }
                          );
                    }
      }
      
      function editPrepareVariant(obj) {
                let id = $(obj).parent("td").data('id');
            
                let inputData = $(obj).parent("td").prev("td").text();
                
                let link = $(obj).parent("td").prev("td").prev("td").text();
                
                let description = $(obj).parent("td").prev("td").prev("td").prev("td").text();
                
                let numberVar = $(obj).parent("td").prev("td").prev("td").prev("td").prev("td").text();
                
                let name = $(obj).parent("td").prev("td").prev("td").prev("td").prev("td").prev("td").text();
                
                $("#edit").find("input[id='EditNumber']").val(numberVar);
                $("#EditDescription").val(description);
                $("#EditLink").val(link);
                $("#EditInputData").val(inputData);
                $("#edit").find("input[type='hidden']").val(id);
                $("#edit").find("select[id='EditLaboratoryWork']").val(name);
      }
      
      function editVariant() {
             let variant = {
                            LaboratoryWorkId: $('#EditLaboratoryWork option:selected')[0].dataset.id,
                            VariantNumber: $('#EditNumber').val(),
                            Description: $('#EditDescription').val(),
                            LinkToModel: $('#EditLink').val(),
                            InputDataRuns: $('#EditInputData').val()
                            };
                   $.ajax(
                       {
                           type: 'POST',
                           url: '/api/variants/update',
                           contentType:  "application/json; charset=utf-8",
                           dataType: "json",
                           data: JSON.stringify(variant),
                           beforeSend: (xhr) =>
                           {
                                let token = sessionStorage.getItem(tokenKey);
                                xhr.setRequestHeader("Authorization", "Bearer " + token);
                                xhr.setRequestHeader("varId", $('#EditVariantId').val());
                           },
                           success: (g) =>
                           {
                               document.location.reload(true);
                           },
                           error: (response) =>
                           {
                               console.log(response);
                               alert('Не удалось обновить группу');
                           }
                       }
                     );   
      }
</script>